npm run commit

便相当于执行 sh commit.sh 任务
这样执行一个命令就可以 提交，这个不错 挺好用 这就是一个脚本 script


npm  run  会列出所有的脚本命令 这样就可以知道是哪个命令了

1. 智能路径

npm run 命令会自动在环境变量 $PATH 添加 node_modules/.bin 目录，所以 scripts 字段里面调用命令时不用加上路径。

所以我们在 package.json 文件内的 scripts 字段内指定任务的时候 一般 无需指定脚本文件的路径，只需要将脚本放到 ./node_module/.bin/ 目录下即可，命令会在 这个目录 下自动寻找对应的脚本文件。而无需使用 ./node_modules/.bin/jshint **.js

当然你也可以更改与指定你需要运行的脚本的文件位置，如下：
  "commit":"sh commit.sh",// 这个应该在 bin下面有个脚本 运行 这个是默认的路径
    "nodeIt": "node demo/server.js"// 这个是修改脚步的运行命令
 "scripts": {
 "nodeIt": "node demo/server.js",
 "runcmd": "call demo/demo.cmd"
 }
 3. 管道式命令

如果希望同时执行多个任务，可以借用 Linux 系统的 管道命令 ，将两个操作连在一起。

在 package.json 文件的 scripts 字段内的一个任务可以由多个子任务组成。

| ：连接两个任务   好像谁在后面就会执行  没有连接在一起
&&  & 两种尝试了没有太大的区别
"build-js": "browserify browser/main.js | uglifyjs -mc > static/bundle.js"
&& ：任务内部引用其他任务，子任务 先后 执行

"build": "npm run build-js && npm run build-css"
& ：任务内部引用其他任务，子任务 平行 执行

"commit": "npm run test & npm run commit"